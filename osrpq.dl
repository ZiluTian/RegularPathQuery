// ab*c => 12*3
.decl labelled_edge(x:number, l:number, y:number)
.input labelled_edge(filename="input/dataset1.facts")

.decl bc_reachable(x:number, y:number)
.output bc_reachable(filename="out/out_bc_reachable_with_limit")

bc_reachable(x, y) :- labelled_edge(x, 3, y).
bc_reachable(x, y) :- labelled_edge(x, 2, z), bc_reachable(z, y).

.limitsize bc_reachable(n=80)

.decl deg(x: number, d: number)
.decl bc_light(x:number, y:number)
.decl bc_heavy(x:number, y:number)
.decl Q_light(x:number, y:number)
.decl Q_heavy(x:number, y:number)
.decl T(x:number, y:number)

deg(x, count : { bc_reachable(x, _) }) :- bc_reachable(x, _).
.output deg(filename="dbg/deg_with_limit")

bc_light(x, y) :- bc_reachable(x, y), deg(x, d), d < 80.
bc_heavy(x, y) :- bc_reachable(x, y), deg(x, d), d = 80.

Q_light(x, y) :- labelled_edge(x, 1, z), bc_light(z, y).
T(x, y) :- labelled_edge(x, 1, z), bc_heavy(z, y).
T(x, y) :- T(x, z), labelled_edge(z, 2, y).
Q_heavy(x, y) :- T(x, z), labelled_edge(z, 3, y).